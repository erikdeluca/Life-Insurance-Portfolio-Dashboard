across(
c(fund, fund_return, fund_premium),
\(x) scales::scientific(x)
)
)
fund() |>
mutate(
across(
c(fund, fund_return, fund_premium),
# \(x) scales::scientific(x)
\(x) scales::label_number_auto(x)
)
)
fund() |>
mutate(
across(
c(fund, fund_return, fund_premium),
# \(x) scales::scientific(x)
\(x) scales::dollar(x, accuracy = 1000)
)
)
fund() |>
mutate(
across(
c(fund, fund_return, fund_premium),
# \(x) scales::scientific(x)
\(x) scales::dollar(x, trim = T)
)
)
fund() |>
mutate(
across(
c(fund, fund_return, fund_premium),
# \(x) scales::scientific(x)
\(x) scales::dollar(x, scale_cut = 1)
)
)
fund() |>
mutate(
across(
c(fund, fund_return, fund_premium),
# \(x) scales::scientific(x)
\(x) scales::label_number_si()
)
)
fund() |>
mutate(
across(
c(fund, fund_return, fund_premium),
# \(x) scales::scientific(x)
\(x) scales::label_number_si(x)
)
)
fund() |>
mutate(
across(
c(fund, fund_return, fund_premium),
# \(x) scales::scientific(x)
\(x) scales::label_number(x, scale_cut = 1)
)
fund() |>
mutate(
across(
c(fund, fund_return, fund_premium),
# \(x) scales::scientific(x)
\(x) scales::label_number(x, scale_cut = 1)
)
)
fund() |>
mutate(
across(
c(fund, fund_return, fund_premium),
# \(x) scales::scientific(x)
\(x) scales::label_number(x, scale_cut = scaless::cut_short_scale())
)
)
fund() |>
mutate(
across(
c(fund, fund_return, fund_premium),
# \(x) scales::scientific(x)
\(x) scales::label_number(x, scale_cut = scales::cut_short_scale())
)
)
fund()
fund() |>
mutate(
across(
c(fund, fund_return, fund_premium),
# \(x) scales::scientific(x)
# \(x) scales::label_number(x, scale_cut = scales::cut_short_scale())
)
)
fund() |>
mutate(
across(
c(fund, fund_return, fund_premium),
# \(x) scales::scientific(x)
\(x) scales::label_number(x, scale_cut = scales::cut_short_scale())
)
)
fund() |>
mutate(
across(
c(fund, fund_return, fund_premium),
# \(x) scales::scientific(x)
\(x) scales::dollar(x, scale_cut = scales::cut_short_scale())
)
)
fund() |>
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
\(x) scales::dollar(x, scale_cut = scales::cut_short_scale())
),
across(
c(financial_rate),
\(x) scales::percent(x)
),
)
fund() |>
mutate(
across(
c(fund, fund_premium, premium_value, fund_annuity),
\(x) scales::dollar(x, scale_cut = scales::cut_short_scale())
),
across(
c(financial_rate),
\(x) scales::percent(x)
),
)
fund() |>
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
\(x) scales::dollar(x, scale_cut = scales::cut_short_scale())
),
# across(
#   c(financial_rate),
#   \(x) scales::percent(x)
# ),
)
fund() |>
mutate(
across(
c(fund, fund_return, fund_premium, ),
\(x) scales::dollar(x, scale_cut = scales::cut_short_scale())
),
# across(
#   c(financial_rate),
#   \(x) scales::percent(x)
# ),
)
fund()
source("~/GitHub/Portafoglio-assicurazioni-vita/Life_Insurance_Portfolio/R/plots.R", echo=TRUE)
x
fund() |>
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
\(x) scales::dollar(x, scale_cut = scales::cut_short_scale())
),
across(
financial_rate,
\(x) scales::percent(x)
),
)
fund() |>
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
\(x) scales::dollar(x, scale_cut = scales::cut_long_scale())
),
across(
financial_rate,
\(x) scales::percent(x)
),
)
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
\(x) scales::dollar(x, scale_cut = scales::cut_long_scale())
),
across(
financial_rate,
\(x) scales::percent(x)
),
)
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
# \(x) scales::dollar(x, scale_cut = scales::cut_long_scale())
),
across(
financial_rate,
\(x) scales::percent(x)
),
)
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
# \(x) scales::dollar(x, scale_cut = scales::cut_long_scale())
),
across(
financial_rate,
\(x) scales::percent(x, accuracy = .01)
),
)
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
\(x) scales::dollar(x, scale_cut = scales::cut_short_scale())
),
across(
financial_rate,
\(x) scales::percent(x, accuracy = .01)
),
)
rlang::last_trace()
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
\(x) x |>
replace_na(x, 0) |>
scales::dollar(scale_cut = scales::cut_short_scale())
),
across(
financial_rate,
\(x) scales::percent(x, accuracy = .01)
),
)
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
\(x) x |>
replace_na(x, ~0) |>
scales::dollar(scale_cut = scales::cut_short_scale())
),
across(
financial_rate,
\(x) scales::percent(x, accuracy = .01)
),
)
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
\(x) x |>
replace_na(x, 0) |>
scales::dollar(scale_cut = scales::cut_short_scale())
),
across(
financial_rate,
\(x) scales::percent(x, accuracy = .01)
),
)
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
print(n = 100)
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
print(n = 100)
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
arrange(-age) |>
summarise(first(fund) / last(survived))
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
arrange(-age) |>
summarise(first(fund) / sum(premium_value))
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
arrange(-age) |>
summarise(first(fund) / sum(fund_premium))
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
summarise(
fund_final = last(fund),
fund_return = fund_final / first(fund) - 1,
fund_premium = sum(fund_premium),
fund_annuity = sum(fund_annuity),
fund_p_on_a = fund_premium / fund_annuity
)
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
summarise(
fund_final_per_person = last(fund) / first(survived),
fund_final = last(fund),
fund_return = fund_final / first(fund) - 1,
fund_premium = sum(fund_premium),
fund_annuity = sum(fund_annuity),
fund_p_on_a = fund_premium / fund_annuity, # it doesn't take into account the number of insured along the years and the discount rate
)
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
print(n = 100)
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
summarise(
fund_final_per_person = last(fund) / first(survived),
ratio_on_premium = fund_final_per_person / sum(premium_value),
fund_final = last(fund),
fund_return = fund_final / first(fund) - 1,
fund_premium = sum(fund_premium),
fund_annuity = sum(fund_annuity),
fund_p_on_a = fund_premium / fund_annuity, # it doesn't take into account the number of insured along the years and the discount rate
)
runApp('Life_Insurance_Portfolio')
source("~/GitHub/Portafoglio-assicurazioni-vita/Life_Insurance_Portfolio/R/plots.R", echo=TRUE)
source("~/GitHub/Portafoglio-assicurazioni-vita/Life_Insurance_Portfolio/R/plots.R", echo=TRUE)
source("~/GitHub/Portafoglio-assicurazioni-vita/Life_Insurance_Portfolio/R/life_insurance_portfolio.R", echo=TRUE)
source("~/GitHub/Portafoglio-assicurazioni-vita/Life_Insurance_Portfolio/R/plots.R", echo=TRUE)
runApp('Life_Insurance_Portfolio')
shinytest::recordTest("~/GitHub/Portafoglio-assicurazioni-vita/Life_Insurance_Portfolio")
runApp('Life_Insurance_Portfolio')
runApp('Life_Insurance_Portfolio')
runApp('Life_Insurance_Portfolio')
cut_long_scale
scales::cut_long_scale
runApp('Life_Insurance_Portfolio')
scales::dollar
scales::number
#
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
# print(n = 100)
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
\(x) scales::dollar(x, scale_cut = c(0, K = 1E3, M = 1E6, B = 1E12, T = 1E18))
),
across(
financial_rate,
\(x) scales::percent(x, accuracy = .01)
),
)
#
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
# print(n = 100)
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
\(x) scales::dollar(x, scale_cut = c(0, K = 1E3, M = 1E6, B = 1E12, 'T' = 1E18))
),
across(
financial_rate,
\(x) scales::percent(x, accuracy = .01)
),
)
#
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
# print(n = 100)
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
\(x) scales::dollar(x, scale_cut = c(0, K = 1E3, M = 1E6, B = 1E12, TR = 1E18))
),
across(
financial_rate,
\(x) scales::percent(x, accuracy = .01)
),
)
#
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
# print(n = 100)
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
\(x) scales::dollar(x, scale_cut = c(0, K = 1E3, M = 1E6, B = 1E12, TR = 1E18, tt = 1E21))
),
across(
financial_rate,
\(x) scales::percent(x, accuracy = .01)
),
)
#
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
# print(n = 100)
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
\(x) scales::dollar(x, scale_cut = c(0, K = 1E3, M = 1E6, B = 1E12, TR = 1E18, tt = 1E21))
),
across(
financial_rate,
\(x) scales::percent(x, accuracy = .01)
),
)
#
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
print(n = 100)
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
\(x) scales::dollar(x, scale_cut = c(-1, 1) * c(0, K = 1E3, M = 1E6, B = 1E12, TR = 1E18, tt = 1E21))
),
across(
financial_rate,
\(x) scales::percent(x, accuracy = .01)
),
)
c(-1, 1) * c(0, K = 1E3, M = 1E6, B = 1E12, TR = 1E18, tt = 1E21)
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
\(x) scales::dollar(x, scale_cut = c(T = -1E18, B = -1E12, M = -1E6, K = -1E3, 0, K = 1E3, M = 1E6, B = 1E12, TR = 1E18, tt = 1E21))
),
across(
financial_rate,
\(x) scales::percent(x, accuracy = .01)
),
)
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
\(x) scales::dollar(x, scale_cut = c(T = -1E18, B = -1E12, M = -1E6, K = -1E3, 0, K = 1E3, M = 1E6, B = 1E12, T = 1E18))
),
across(
financial_rate,
\(x) scales::percent(x, accuracy = .01)
),
)
#
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
# print(n = 100)
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
\(x) scales::dollar(x, scale_cut = c(T = -1E18, B = -1E12, M = -1E6, K = -1E3, 0, K = 1E3, M = 1E6, B = 1E12, T = 1E18))
),
across(
financial_rate,
\(x) scales::percent(x, accuracy = .01)
),
)
scales::cut_short_scale
scales::cut_long_scale
#
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
# print(n = 100)
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
\(x) scales::dollar(x, scale_cut = c(T = -1E18, B = -1E12, M = -1E6, K = -1E3, 0, K = 1E3, M = 1E6, B = 1E12, T = 1E18))
),
across(
financial_rate,
\(x) scales::percent(x, accuracy = .01)
),
)
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0)
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0)$fund_annuity
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0)$fund_annuity |>
# scales::dollar(x, scale_cut = c(T = -1E18, B = -1E12, M = -1E6, K = -1E3, 0, K = 1E3, M = 1E6, B = 1E12, T = 1E18))
scales::dollar(x, scale_cut = scales::cut_long_scale())
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0)$fund |>
# scales::dollar(x, scale_cut = c(T = -1E18, B = -1E12, M = -1E6, K = -1E3, 0, K = 1E3, M = 1E6, B = 1E12, T = 1E18))
scales::dollar(x, scale_cut = scales::cut_long_scale())
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0)$fund |>
# scales::dollar(x, scale_cut = c(T = -1E18, B = -1E12, M = -1E6, K = -1E3, 0, K = 1E3, M = 1E6, B = 1E12, T = 1E18))
scales::dollar(x, scale_cut = scales::cut_short_scale())
scales::dollar(0, scale_cut = scales::cut_short_scale())
scales::dollar(0.0, scale_cut = scales::cut_short_scale())
scales::dollar(2746286.6, scale_cut = scales::cut_short_scale())
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0)$fund |>
# scales::dollar(x, scale_cut = c(T = -1E18, B = -1E12, M = -1E6, K = -1E3, 0, K = 1E3, M = 1E6, B = 1E12, T = 1E18))
scales::dollar(x, scale_cut = scales::cut_short_scale())
scales::dollar(c(2746286.6, 0.0, 579764.2), scale_cut = scales::cut_short_scale())
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0)$fund |>
# scales::dollar(x, scale_cut = c(T = -1E18, B = -1E12, M = -1E6, K = -1E3, 0, K = 1E3, M = 1E6, B = 1E12, T = 1E18))
scales::dollar(scale_cut = scales::cut_short_scale())
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0)$fund |>
# scales::dollar(x, scale_cut = c(T = -1E18, B = -1E12, M = -1E6, K = -1E3, 0, K = 1E3, M = 1E6, B = 1E12, T = 1E18))
scales::dollar(scale_cut = scales::cut_short_scale())
scales::dollar(fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0)$fund,
scale_cut = scales::cut_short_scale())
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0)$fund
scales::dollar(c(2746286.6, 0.0, 579764.2, -579764.2), scale_cut = scales::cut_short_scale())
scales::dollar(c(2746286.6, 0.0, 579764.2, -579764.2), scale_cut = scales::cut_short_scale())
scales::dollar(c(2746286.6, 0.0, 579764.2, -57000), scale_cut = scales::cut_short_scale())
scales::dollar(c(2746286.6, 0.0, 579764.2, -57000.2), scale_cut = scales::cut_short_scale())
scales::dollar(c(2746286.6, 0.0, 579764.2, -579764.2), scale_cut = scales::cut_short_scale())
scales::number(c(2746286.6, 0.0, 579764.2, -579764.2), scale_cut = scales::cut_short_scale())
scales::number(c(2746286.6, 0.0, 579764.2, -579764.2), scale_cut = scales::cut_short_scale())
sessionInfo()
sessionInfo() |> names()
sessionInfo()$otherPkgs
sessionInfo()$otherPkgs |> names()
devtools::install_github("r-lib/scales", ref = "c0f79d3")
#
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0) |>
# print(n = 100)
mutate(
across(
c(fund, fund_return, fund_premium, premium_value, fund_annuity),
\(x) scales::dollar(x, scale_cut = c(T = -1E18, B = -1E12, M = -1E6, K = -1E3, 0, K = 1E3, M = 1E6, B = 1E12, T = 1E18))
),
across(
financial_rate,
\(x) scales::percent(x, accuracy = .01)
),
)
fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0)$fund |>
# scales::dollar(x, scale_cut = c(T = -1E18, B = -1E12, M = -1E6, K = -1E3, 0, K = 1E3, M = 1E6, B = 1E12, T = 1E18))
scales::dollar(scale_cut = scales::cut_short_scale())
library(scales)
scales::dollar(fund(aleatory_mortality = F, aleatory_rate = F, age = 60, guaranteed_rates_duration = 0)$fund,
scale_cut = scales::cut_short_scale())
devtools::install_github("r-lib/scales", ref = "6f2f979
")
scales::scale_cut
scales::scale_cut(+)
scales::number
scales::scale_cut
library(scales)
scales::scale_cut
