)) + sum((1 + tassoTecnico) ** -c((differimento + 1 + rateGarantiteDurata):anniCopertura
) * hPx(c((differimento + 1 + rateGarantiteDurata):anniCopertura
), eta)))
if (numeroPremi == 1)
{
return(p)
} else
{
return(p / sum((1 + tassoTecnico) ** -c(0:(
numeroPremi - 1
)) * hPx(c(
0:(numeroPremi - 1)
), eta))) # parte da zero perché la prima la pagano tutti
}
} else
{
p = rata * sum((1 + tassoTecnico) ** -(c((
differimento + 1
):anniCopertura)) * hPx(c((
differimento + 1
):anniCopertura), eta))
if (numeroPremi == 1)
{
return(p)
} else
{
return(p / sum((1 + tassoTecnico) ** -c(0:(
numeroPremi - 1
)) * hPx(c(
0:(numeroPremi - 1)
), eta))) # parte da zero perché la prima la pagano tutti
}
}
return(-1) # nel caso l'utente inserisca rate garantite negative. Sì potrebbe mettere un try and catch
}
# INIZIO ANDAMENTO E RENDIMENTO
# calcolo dei vari decessi
decessi = calcoloDecessi()
#Utilizzo della forumula ricorsiva
# incasso dei premi e differimento
if (differimento > 0) {
for (t in 1:(differimento))
{
andamentoFondo = c(andamentoFondo,
(
ifelse(t > numeroPremi, 0, hAV(t) * premio()) +
ifelse(t > 1, andamentoFondo[t -
1], fondoInizio)
) * (1 + tassoFinanziario[t]))
rendimentoFondo = c(rendimentoFondo,
andamentoFondo[t] - ifelse(t > 1, andamentoFondo[t - 1], fondoInizio))
}
}
# calcolo del fondo dall'inizio del pagamento delle rate
for (t in (differimento + 1):(anniCopertura))
{
andamentoFondo = c(andamentoFondo, (
ifelse(
t > 1,
andamentoFondo[t - 1],
fondoInizio + premio() * numeroAssicurati
) -
(
rata * ifelse((t - differimento) > rateGarantiteDurata,
hAV(t + 1),
numeroAssicurati
)
)
) * (1 + tassoFinanziario[t]))
rendimentoFondo = c(rendimentoFondo,
andamentoFondo[t] - ifelse(t > 1, andamentoFondo[t - 1], fondoInizio))
}
#Creazione dell'oggetto che la funzione dovrà tornare
# print(c(length(anni),length(andamentoFondo),length(c(replicate(numeroPremi,premio()),
#                            rep(0,anniCopertura-numeroPremi)))))
Output = tibble(anni,
andamentoFondo,
rendimentoFondo,
decessi = decessi[2:length(decessi)],
premio = c(replicate(numeroPremi, premio()),
rep(0, differimento-numeroPremi),
rep(rata, anniCopertura-differimento)))
return(Output)
}
o = gestionePortafoglio(
numeroAssicurati = 10000,
eta = 30,
rata = 2000,
fondoInizio = 0,
numeroPremi = 10,
differimento = 20,
temporanea = TRUE,
anniCopertura = 50,
rendimentoFondoAnnuo = 0.02,
tassoTecnico = 0.02,
tassoAleatorio = TRUE,
tavolaMortalita = demoIta$SIM92,
tavolaPeriodo = demoIta$SIF92
)
stampaGrafici(o)[[3]]
stampaGrafici = function(dataFunzione)
{
gg1 = ggplot(dataFunzione, aes(anni, andamentoFondo)) +
geom_point() +
geom_line() +
scale_y_continuous(labels = scales::unit_format(unit = "€")) +
geom_hline(yintercept = 0, color = "red") +
theme_minimal() +
annotate(geom = "text",x = max(dataFunzione$anni)*0.9,y = max(dataFunzione$andamentoFondo)*.8,
label = paste("Premio: €",
formatC(dataFunzione$premio[1],
big.mark=',',
digits = 2,
format = 'f'))) +
labs(title = "Andamento del fondo") +
ylab(label = "Andamento del fondo") +
xlab("Età della coorte di assicurati")
gg2 = ggplot(dataFunzione, aes(anni, rendimentoFondo)) +
geom_point() +
geom_line() +
scale_y_continuous(labels = scales::unit_format(unit = "€")) +
geom_hline(yintercept = 0, color = "red") +
theme_minimal() +
labs(title = "Rendimento del fondo") +
ylab(label = "Rendimento del fondo") +
xlab("Età della coorte di assicurati")
gg3 = ggplot(dataFunzione, aes(anni, decessi)) +
geom_area() +
theme_minimal() +
labs(title = "Decessi") +
ylab(label = "Decessi") +
xlab("Età della coorte di assicurati")
gg = list(gg1,gg2,gg3)
return(gg)
}
stampaGrafici(o)[[3]]
return(gg)
stampaGrafici = function(dataFunzione)
{
gg1 = ggplot(dataFunzione, aes(anni, andamentoFondo)) +
geom_point() +
geom_line() +
scale_y_continuous(labels = scales::unit_format(unit = "€")) +
geom_hline(yintercept = 0, color = "red") +
theme_minimal() +
annotate(geom = "text",x = max(dataFunzione$anni)*0.9,y = max(dataFunzione$andamentoFondo)*.8,
label = paste("Premio: €",
formatC(dataFunzione$premio[1],
big.mark=',',
digits = 2,
format = 'f'))) +
labs(title = "Andamento del fondo") +
ylab(label = "Andamento del fondo") +
xlab("Età della coorte di assicurati")
gg2 = ggplot(dataFunzione, aes(anni, rendimentoFondo)) +
geom_point() +
geom_line() +
scale_y_continuous(labels = scales::unit_format(unit = "€")) +
geom_hline(yintercept = 0, color = "red") +
theme_minimal() +
labs(title = "Rendimento del fondo") +
ylab(label = "Rendimento del fondo") +
xlab("Età della coorte di assicurati")
gg3 = ggplot(dataFunzione, aes(anni, decessi)) +
geom_area(alpha = 0.5) +
theme_minimal() +
labs(title = "Decessi") +
ylab(label = "Decessi") +
xlab("Età della coorte di assicurati")
gg = list(gg1,gg2,gg3)
return(gg)
}
stampaGrafici(o)[[3]]
gestionePortafoglio = function(#input
numeroAssicurati = 1000,
eta = 20,
rata = 1000,
fondoInizio = 100000,
numeroPremi = 15,
omega = 110,
differimento = 25,
temporanea = FALSE,
# temporanea o  vita intera
anniCopertura = 35,
rateGarantiteDurata = 5,
rendimentoFondoAnnuo = 0.02,
# tasso finanziario
tassoAleatorio = TRUE,
tavolaMortalita = demoIta$RG48M,
#tavola utilizzata per la base tecnica
tassoTecnico = 0.02,
#tasso utilizzato per la base tecnica
tavolaPeriodo = demoIta$SIM02) {
# tavola utilizzata per calcolare i morti nel portafoglio
# vengono inizializzati gli output
andamentoFondo = NULL
rendimentoFondo = NULL
decessi = NULL
# Fissiamo gli anni di copertura nel caso di una vitalizia
if (!temporanea)
{
anniCopertura = omega - eta
}
# vettore anni
anni = (eta+1):(anniCopertura + eta)
calcoloVettoreTasso = function()
{
#il tasso si distribuisce come una normale
ifelse(tassoAleatorio, return(rnorm(
anniCopertura, mean = rendimentoFondoAnnuo, sd = 0.01
)), return(rep(rendimentoFondoAnnuo, anniCopertura)))
# accettiamo la possibilità di deflazione nel caso del aleatorio
}
tassoFinanziario = calcoloVettoreTasso()
# calcola quante persone muoiono nel fondo
calcoloDecessi = function()
{
died = NULL
for (i in eta:(anniCopertura + eta))
{
sopravissuti = numeroAssicurati - sum(died)
#mu = probabilità di decesso nell'anno i condizionatamente che siano in vita all'anno i
mu =  (tavolaPeriodo[i + 1] - ifelse(i > (omega - 2), 0, tavolaPeriodo[i +
2])) / ifelse(i > (omega - 1), 1, tavolaPeriodo[i + 1])
#genera i morti da una normale con media quelli che in linea teorica dovrebbero morire
mortiCasuali = abs(rnorm(1, sopravissuti * mu, mu))
#arrotonda agli interi il numero di morti e nel caso sia > dei sopravissuti, li uccide tutti
died = round(c(
died,
ifelse(mortiCasuali > sopravissuti, sopravissuti, mortiCasuali)
),
digits = 0) #le persone sono interi e quindi si arrotonda a degli interi
}
return(died)
}
# calcola gli hPx tramite l_(x+h) / l_x
hPx = function(h, x)
{
# il +1 è per compensare che in R i vettori partono da 1 mentre l'età parte da zero
# ifelse serve a evitare il problema dell'età limite di andare fuori dal vettore
return(ifelse(h + x > omega - 1, 0, tavolaMortalita[h + x + 1]) / tavolaMortalita[x + 1])
}
# assicurati vivi
hAV = function(h)
# indica al tempo t il numero di assicurati sopravissuti
{
return(numeroAssicurati - ifelse(h > 0, sum(decessi[1:h]), 0))
}
# PREMIO
premio = function()
{
if (rateGarantiteDurata > 0)
{
p = rata * (sum((1 + tassoTecnico) ** -c((differimento + 1):(differimento + 1 + rateGarantiteDurata)
)) + sum((1 + tassoTecnico) ** -c((differimento + 1 + rateGarantiteDurata):anniCopertura
) * hPx(c((differimento + 1 + rateGarantiteDurata):anniCopertura
), eta)))
if (numeroPremi == 1)
{
return(p)
} else
{
return(p / sum((1 + tassoTecnico) ** -c(0:(
numeroPremi - 1
)) * hPx(c(
0:(numeroPremi - 1)
), eta))) # parte da zero perché la prima la pagano tutti
}
} else
{
p = rata * sum((1 + tassoTecnico) ** -(c((
differimento + 1
):anniCopertura)) * hPx(c((
differimento + 1
):anniCopertura), eta))
if (numeroPremi == 1)
{
return(p)
} else
{
return(p / sum((1 + tassoTecnico) ** -c(0:(
numeroPremi - 1
)) * hPx(c(
0:(numeroPremi - 1)
), eta))) # parte da zero perché la prima la pagano tutti
}
}
return(-1) # nel caso l'utente inserisca rate garantite negative. Sì potrebbe mettere un try and catch
}
# INIZIO ANDAMENTO E RENDIMENTO
# calcolo dei vari decessi
decessi = calcoloDecessi()
#Utilizzo della forumula ricorsiva
# incasso dei premi e differimento
if (differimento > 0) {
for (t in 1:(differimento))
{
andamentoFondo = c(andamentoFondo,
(
ifelse(t > numeroPremi, 0, hAV(t) * premio()) +
ifelse(t > 1, andamentoFondo[t -
1], fondoInizio)
) * (1 + tassoFinanziario[t]))
rendimentoFondo = c(rendimentoFondo,
andamentoFondo[t] - ifelse(t > 1, andamentoFondo[t - 1], fondoInizio))
}
}
# calcolo del fondo dall'inizio del pagamento delle rate
for (t in (differimento + 1):(anniCopertura))
{
andamentoFondo = c(andamentoFondo, (
ifelse(
t > 1,
andamentoFondo[t - 1],
fondoInizio + premio() * numeroAssicurati
) -
(
rata * ifelse((t - differimento) > rateGarantiteDurata,
hAV(t + 1),
numeroAssicurati
)
)
) * (1 + tassoFinanziario[t]))
rendimentoFondo = c(rendimentoFondo,
andamentoFondo[t] - ifelse(t > 1, andamentoFondo[t - 1], fondoInizio))
}
#Creazione dell'oggetto che la funzione dovrà tornare
# print(c(length(anni),length(andamentoFondo),length(c(replicate(numeroPremi,premio()),
#                            rep(0,anniCopertura-numeroPremi)))))
Output = tibble(anni,
andamentoFondo,
rendimentoFondo,
decessi = decessi[2:length(decessi)],
premio = c(replicate(numeroPremi, premio()),
rep(0, differimento-numeroPremi),
rep(rata, anniCopertura-differimento)),
tasso = tassoFinanziario)
return(Output)
}
o = gestionePortafoglio(
numeroAssicurati = 10000,
eta = 30,
rata = 2000,
fondoInizio = 0,
numeroPremi = 10,
differimento = 20,
temporanea = TRUE,
anniCopertura = 50,
rendimentoFondoAnnuo = 0.02,
tassoTecnico = 0.02,
tassoAleatorio = TRUE,
tavolaMortalita = demoIta$SIM92,
tavolaPeriodo = demoIta$SIF92
)
stampaGrafici(o)[[3]]
stampaGrafici = function(dataFunzione)
{
gg1 = ggplot(dataFunzione, aes(anni, andamentoFondo)) +
geom_point() +
geom_line() +
scale_y_continuous(labels = scales::unit_format(unit = "€")) +
geom_hline(yintercept = 0, color = "red") +
theme_minimal() +
annotate(geom = "text",x = max(dataFunzione$anni)*0.9,y = max(dataFunzione$andamentoFondo)*.8,
label = paste("Premio: €",
formatC(dataFunzione$premio[1],
big.mark=',',
digits = 2,
format = 'f'))) +
labs(title = "Andamento del fondo") +
ylab(label = "Andamento del fondo") +
xlab("Età della coorte di assicurati")
gg2 = ggplot(dataFunzione, aes(anni, rendimentoFondo)) +
geom_point() +
geom_line() +
scale_y_continuous(labels = scales::unit_format(unit = "€")) +
geom_hline(yintercept = 0, color = "red") +
theme_minimal() +
labs(title = "Rendimento del fondo") +
ylab(label = "Rendimento del fondo") +
xlab("Età della coorte di assicurati")
gg3 = ggplot(dataFunzione, aes(anni, decessi)) +
geom_area(alpha = 0.5) +
theme_minimal() +
labs(title = "Decessi") +
ylab(label = "Decessi") +
xlab("Età della coorte di assicurati")
gg4 = ggplot(dataFunzione, aes(anni, tasso)) +
geom_line() +
theme_minimal() +
labs(title = "Tasso") +
ylab(label = "Tasso") +
xlab("Età della coorte di assicurati")
gg = list(gg1,gg2,gg3,gg4)
return(gg)
}
stampaGrafici(o)[[4]]
x
hist(x)
sessionInfo()
stampaGrafici(o)[[1]]
o = gestionePortafoglio(
numeroAssicurati = 10000,
eta = 30,
rata = 2000,
fondoInizio = 0,
numeroPremi = 10,
differimento = 20,
temporanea = TRUE,
anniCopertura = 50,
rendimentoFondoAnnuo = 0.03,
tassoTecnico = 0.02,
tassoAleatorio = TRUE,
tavolaMortalita = demoIta$SIM92,
tavolaPeriodo = demoIta$SIF92
)
stampaGrafici(o)[[1]]
o = gestionePortafoglio(
numeroAssicurati = 10000,
eta = 30,
rata = 2000,
fondoInizio = 0,
numeroPremi = 10,
differimento = 20,
temporanea = TRUE,
anniCopertura = 50,
rendimentoFondoAnnuo = 0.025,
tassoTecnico = 0.02,
tassoAleatorio = TRUE,
tavolaMortalita = demoIta$SIM92,
tavolaPeriodo = demoIta$SIM92
)
stampaGrafici(o)[[1]]
o = gestionePortafoglio(
numeroAssicurati = 10000,
eta = 30,
rata = 20000,
fondoInizio = 0,
numeroPremi = 25,
differimento = 30,
temporanea = TRUE,
anniCopertura = 50,
rendimentoFondoAnnuo = 0.025,
tassoTecnico = 0.02,
tassoAleatorio = TRUE,
tavolaMortalita = demoIta$SIM92,
tavolaPeriodo = demoIta$SIM92
)
stampaGrafici(o)[[1]]
o = gestionePortafoglio(
numeroAssicurati = 10000,
eta = 30,
rata = 20000,
fondoInizio = 0,
numeroPremi = 25,
differimento = 30,
temporanea = TRUE,
anniCopertura = 50,
rendimentoFondoAnnuo = 0.02,
tassoTecnico = 0.02,
tassoAleatorio = TRUE,
tavolaMortalita = demoIta$SIM92,
tavolaPeriodo = demoIta$SIM92
)
stampaGrafici(o)[[1]]
o = gestionePortafoglio(
numeroAssicurati = 10000,
eta = 30,
rata = 20000,
fondoInizio = 0,
numeroPremi = 25,
differimento = 30,
temporanea = FALSE,
anniCopertura = 50,
rendimentoFondoAnnuo = 0.02,
tassoTecnico = 0.02,
tassoAleatorio = TRUE,
tavolaMortalita = demoIta$SIM92,
tavolaPeriodo = demoIta$SIM92
)
stampaGrafici(o)[[1]]
o$premio[1]
o = gestionePortafoglio(
numeroAssicurati = 10000,
eta = 30,
rata = 20000,
fondoInizio = 0,
numeroPremi = 25,
differimento = 30,
temporanea = FALSE,
anniCopertura = 50,
rateGarantiteDurata = 10,
rendimentoFondoAnnuo = 0.02,
tassoTecnico = 0.02,
tassoAleatorio = TRUE,
tavolaMortalita = demoIta$SIM92,
tavolaPeriodo = demoIta$SIM92
)
stampaGrafici(o)[[1]]
plot(runif(100),runif(100))
plot(rnorm(100),rnorm(100))
plot(rnorm(1000),rnorm(1000))
z = rnorm(1000)
y = z + rnorm(1000)
plot(z,y)
x1 = rt(1000)
x1 = rt(1000,10)
x2 = rt(1000,10) + x1
plot(x1,x2)
par(mfrow = c(2,1))
plot(x1,x2)
plot(z,y)
