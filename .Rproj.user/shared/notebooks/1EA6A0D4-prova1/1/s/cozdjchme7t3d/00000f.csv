"0","#' MonteCarlo"
"0","#'"
"0","#' @param x "
"0","#' @param level "
"0","#' @param numeroMomenti "
"0","#'"
"0","#' @return "
"0","#' @export"
"0","#'"
"0","#' @examples"
"0","MonteCarlo <- function(x,"
"0","                       level = 0.95,"
"0","                       numeroMomenti = 10)"
"0","{"
"0","  monteCarlo = new.env()"
"0","  nSimulazioni = length(x)"
"0","  monteCarlo$valAtteso = mean(x)"
"0","  monteCarlo$varianzaCampionaria = sd(x) / sqrt(nSimulazioni - 1)"
"0","  #lower tail = false indica che la prob diverta 1-alpha al posto di alpha"
"0","  z = qnorm((1 - level) / 2, lower.tail = FALSE)"
"0","  intConfLow = monteCarlo$valAtteso - z * monteCarlo$varianzaCampionaria"
"0","  intConfUp = monteCarlo$valAtteso + z * monteCarlo$varianzaCampionaria"
"0","  monteCarlo$intervalloConfidenza = c(intConfLow, intConfUp)"
"0","  for (i in 1:numeroMomenti)"
"0","  {"
"0","    monteCarlo$momenti[i] = mean(x ** i)"
"0","  }"
"0","  "
"0","  #probabilitÃ  di rovina"
"0","  rovine=0"
"0","  for (i in 1:length(x))"
"0","  {"
"0","    rovine = rovine+ifelse(x[i] < 0, 1, 0)"
"0","  }"
"0","  monteCarlo$rovina = rovine / length(x)"
"0","  return(monteCarlo)"
"0","}"
