---
title: "Life Insurance Portfolio Dashboard"
# format: dashboard Taken from _quarto.yml
format:
    dashboard:
       theme: 
         - cosmo
         - www/styles.scss
       light: minty
       dark: solar
       toc: true
       page-layout: fill
       code-fold: true
       df-print: paged
       warnings: false
       nav-buttons:
            - icon: linkedin
              href: https://www.linkedin.com/in/erikdeluca/
              target: _blank
            - icon: github
              href: https://github.com/erikdeluca/Portafoglio-assicurazioni-vita
              target: _blank
server: shiny
---

# Input {.sidebar width=30%}

#### Time Inputs

```{r}
# Input: advance or deferred payment
prettyRadioButtons("payment", "Advance (due) or arrears (immediate) payments",
             choices = c("advance", "arrears"),
             selected = "advance", inline = TRUE
             )
# Input: Age
sliderInput("age", "Age", value = 20, min = 0, max = 100)

# Input: Duration of coverage
uiOutput("duration_annuities")

# Input: Number of premiums
uiOutput("number_premiums")

# Input: guaranteed rates duration
uiOutput("guaranteed_rates_duration")
```

#### Rates and Mortality Inputs

:::: {.columns}

::: {.column width="50%"}
```{r}
# interest rate input
numericInput("interest_rate", "Interest rate", 
             value = 0.02, 
             min = 0, 
             max = 1, 
             step = 0.01,
             width = 1000)

# Input: technical table
selectInput("technical_table",
            "Technical table",
            choices = names(demoIta),
            selected = names(demoIta)[6],
            width = 1000)
```
:::

::: {.column width="50%"}
```{r}
# technical rate input
numericInput("technical_rate", "Technical rate",
             value = 0.02,
             min = 0,
             max = 1, 
             step = 0.01,
             width = 1000)

# Input: simulation table
selectInput("simulation_table",
            "Simulation table",
            choices = names(demoIta),
            selected = names(demoIta)[6],
            width = 1000)
```
:::

::::

#### Aleatory

```{r}
# aleatory rate
prettySwitch("aleatory_rate", "Aleatory rate",status = "primary", value = F)

# aleatory mortality 
prettySwitch("aleatory_mortality", "Aleatory mortality",status = "primary", value = F)
```

#### Funds Inputs

:::: {.columns}

::: {.column width="50%"}
```{r}
# Input: Initial fund
numericInput("initial_fund", "Initial fund", value = 0, min = 0, width = 1000)

# Input: Rate
numericInput("annuity", "Annuity", value = 1, min = 0, width = 1000)
```
:::

::: {.column width="50%"}
```{r}
# Input: Number of insured
numericInput("number_insured", "Number of insured", value = 1000, width = 1000)
```
:::

::::

# Fund Performance 

## Row {expandible=false}

::: {.panel-tabset} 

## Fund Performance

```{r}
plotOutput("fund_performance_plot") |> withSpinner()
```

## Fund Spin

```{r}
plotOutput("fund_spin_plot") |> withSpinner(color = "#FFAAFF")
```


:::

## Data 

## Real Fund 

```{r}
dataTableOutput("real_fund_table") |> withSpinner()
```

# Fund Theoretical

## Plot

```{r}
plotOutput("theoretical_fund_plot") |> withSpinner()
```


## Theoretical Fund 

```{r}
dataTableOutput("theoretical_fund_table") |> withSpinner()
```


# Deaths and Financial Rates

## Plot

```{r}
plotOutput("deaths_plot") |> withSpinner()
```


# About

::: {.card title="About this project"}

This project has the only purpose to try a dashboard

:::