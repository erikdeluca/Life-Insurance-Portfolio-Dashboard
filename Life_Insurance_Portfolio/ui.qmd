---
title: "Portafoglio di assicurati"
# format: dashboard Taken from _quarto.yml
format:
    dashboard:
       theme: 
         - cosmo
         - www/styles.scss
       light: minty
       dark: solar
       toc: true
       page-layout: fill
       code-fold: true
       df-print: paged
       warnings: false
server: shiny
---

# Input {.sidebar width=30%}

## Time Inputs

```{r}
# Input: advance or deferred payment
prettyRadioButtons("payment", "Advance (due) or arrears (immediate) payments",
             choices = c("advance", "arrears"),
             selected = "advance", inline = TRUE
             )
# Input: Age
sliderInput("age", "Age", value = 20, min = 0, max = 100)

# Input: Duration of coverage
uiOutput("duration_annuities")

# Input: Number of premiums
uiOutput("number_premiums")

# Input: guaranteed rates duration
uiOutput("guaranteed_rates_duration")
```

## Rates and Mortality Inputs

### Column {width="50%"}

```{r}
# interest rate input
numericInput("interest_rate", "Interest rate", value = 0.02, min = 0, max = 1, step = 0.01)

# Input: technical table
selectInput("technical_table",
            "Technical table",
            choices = names(demoIta),
            selected = names(demoIta)[6])
```

### Column {width="50%"}

```{r}
# technical rate input
numericInput("technical_rate", "Technical rate", value = 0.02, min = 0, max = 1, step = 0.01)

# Input: simulation table
selectInput("simulation_table",
            "Simulation table",
            choices = names(demoIta),
            selected = names(demoIta)[6])
```

## Aleatory

```{r}
# aleatory rate
prettySwitch("aleatory_rate", "Aleatory rate",status = "primary", value = F)

# aleatory mortality 
prettySwitch("aleatory_mortality", "Aleatory mortality",status = "primary", value = F)
```

## Funds Inputs


### Column {width="50%"}

```{r}
# Input: Initial fund
numericInput("initial_fund", "Initial fund", value = 0, min = 0)

# Input: Rate
numericInput("annuity", "Annuity", value = 1, min = 0)
```


### Column {width="50%"}

```{r}
# Input: Number of insured
numericInput("number_insured", "Number of insured", value = 1000)
```

# Fund Performance

## Plot

```{r}
plotOutput("fund_performance_plot") |> withSpinner()
```

## Data {expandible="false"}

::: {.panel-tabset}
## Real Fund 

```{r}
dataTableOutput("real_fund_table") |> withSpinner()
```

## Theoretical Fund 

```{r}
dataTableOutput("theoretical_fund_table") |> withSpinner()
```
:::